{"version":3,"sources":["api/users.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["id","name","username","email","UserInfo","user","className","href","TodoInfo","todo","classNames","completed","title","TodoList","todos","map","getUser","userValue","usersFromServer","find","userId","App","todosArr","useState","setTitle","selectedUserId","setSelectedUserId","todosList","setTodosList","Math","max","todoId","setTodoId","submitButton","setSubmitButton","isTitleFilled","isUserSelected","action","method","onSubmit","event","preventDefault","prevId","type","value","placeholder","onChange","target","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1820c7f3.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import React from 'react';\nimport { User } from '../../types/User';\n\nimport './UserInfo.scss';\n\ninterface Props {\n  user: User,\n}\n\nexport const UserInfo: React.FC<Props> = ({ user }) => (\n  <a className=\"UserInfo\" href={`mailto:${user.email}`}>\n    {user.name}\n  </a>\n);\n","import React from 'react';\nimport classNames from 'classnames';\n\nimport './TodoInfo.scss';\n\nimport { Todo } from '../../types/Todo';\nimport { UserInfo } from '../UserInfo/UserInfo';\n\ninterface Props {\n  todo: Todo,\n}\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => (\n  <article\n    data-id={todo.id}\n    className={classNames(\n      'TodoInfo', {\n        'TodoInfo--completed': todo.completed,\n      },\n    )}\n  >\n    <h2 className=\"TodoInfo__title\">{todo.title}</h2>\n\n    {todo.user && <UserInfo user={todo.user} />}\n\n  </article>\n\n);\n","import React from 'react';\nimport { Todo } from '../../types/Todo';\nimport { TodoInfo } from '../TodoInfo/TodoInfo';\n\ninterface Props {\n  todos: Todo[],\n}\n\nexport const TodoList: React.FC<Props> = ({ todos }) => (\n  <>\n    {todos.map(todo => <TodoInfo todo={todo} key={todo.id} />)}\n  </>\n);\n","import { FormEvent, useState } from 'react';\n\nimport './App.scss';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { TodoList } from './components/TodoList/TodoList';\nimport { User } from './types/User';\nimport { Todo } from './types/Todo';\n\nfunction getUser(userValue: number): User | null {\n  const foundUser = usersFromServer.find(user => user.id === userValue);\n\n  return foundUser || null;\n}\n\nexport const todos: Todo[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUser(todo.userId),\n}));\n\nexport const newTodoID = (todosArr: Todo[]) => (\n  Math.max(...todosArr.map(todo => todo.id)) + 1\n);\n\nexport const App = () => {\n  const [title, setTitle] = useState('');\n  const [selectedUserId, setSelectedUserId] = useState(0);\n  const [todosList, setTodosList] = useState(todos);\n  const [todoId, setTodoId] = useState(newTodoID(todosList));\n  const [submitButton, setSubmitButton] = useState(false);\n  const isTitleFilled = !title && submitButton;\n  const isUserSelected = !selectedUserId && submitButton;\n\n  const newTodo = () => ({\n    id: todoId,\n    title,\n    completed: false,\n    userId: selectedUserId,\n    user: getUser(selectedUserId),\n  });\n\n  const addTodo = () => {\n    if (selectedUserId && title) {\n      setTodosList(\n        [\n          ...todosList,\n          newTodo(),\n        ],\n      );\n      setTodoId((prevId) => prevId + 1);\n      setTitle('');\n      setSelectedUserId(0);\n      setSubmitButton(false);\n    }\n  };\n\n  const handleFormSubmit = (event: FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    setSubmitButton(true);\n    addTodo();\n  };\n\n  const handleTitle = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(event.target.value);\n  };\n\n  const handleUserId = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setSelectedUserId(+event.target.value);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/users\"\n        method=\"POST\"\n        onSubmit={handleFormSubmit}\n      >\n        <div className=\"field\">\n          <input\n            type=\"text\"\n            data-cy=\"titleInput\"\n            value={title}\n            placeholder=\"Enter a title\"\n            onChange={handleTitle}\n          />\n          {isTitleFilled\n          && <span className=\"error\">Please enter a title</span>}\n        </div>\n        <div className=\"field\">\n          <select\n            data-cy=\"userSelect\"\n            value={selectedUserId}\n            onChange={handleUserId}\n          >\n            <option value={0} disabled>Choose a user</option>\n            {usersFromServer.map(user => {\n              return (\n                <option\n                  value={user.id}\n                  key={user.id}\n                >\n                  {user.name}\n                </option>\n              );\n            })}\n          </select>\n          {isUserSelected\n          && <span className=\"error\">Please choose a user</span>}\n        </div>\n\n        <button\n          type=\"submit\"\n          data-cy=\"submitButton\"\n        >\n          Add\n        </button>\n      </form>\n\n      <section className=\"TodoList\">\n        <section className=\"TodoList\">\n          <TodoList todos={todosList} />\n        </section>\n      </section>\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}